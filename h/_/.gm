; about alias
	; about name of structure
		commutative_group: = abelian_group,
		commutative_domain: = integral_domain,

		division_ring: = skew_field, ; I mat not use this name as division_ring don't define the division indeed
		unital_module: = ring.module, ; left module
		; I'll do not define the singel module in this level
		linear_space: = field.module,
		vector_space: = field.module,

		least_well_ordered_set: = well_ordered_set,
	; end

	; about topology
		top'space: = topological_space, ; My (year 2) topology teacher use it
		; ! continuous_function: = topological_space.homomorphism,
		; ! homeomorphism: = topological_space.isomorphism,
		; ? topological_isomorphism: = topological_space.isomorphism,
	; end

	; about linear (vector) space
		linear_map: = field.module.homomorphism,
		linear_transformation: = field.module.homomorphism,
		linear_operator: = field.module.endomorphism. ; * I do not like this name
	; end

	; about poset
		increasing_function: = poset.homomorphism,
		decreasing_function: = poset.anti_homomorphism,
		strictly_increasing_function: = poset.monomorphism,
		strictly_decreasing_function: = poset.anti_monomorphism,
	; end

	; about full name of inheritance
		; about trivial
			trivial_group: = group.trivial,
			trivial_rng: = rng.trivial,
			topological_trivial_space: = topological_space.trivial,
			trivial_vector_space: = field.module.trivial,
			trivial_linear_space: = field.module.trivial,
		; end

		; about sub
			subgroup: = group.sub,
			subrng: = rng.sub,
			subring: = ring.sub,
			subfield: = field.sub,
			topological_subspace: = topological_space.sub,
			linear_subspace: = field.module.sub,
			vector_subspace: = field.module.sub,
		; end
	; end
; end
