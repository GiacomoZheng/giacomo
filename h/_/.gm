; about alias
	; about name of structures
		commutative_group: = abelian_group,

		commutative_domain: = integral_domain,

		unital_rng: = ring, ; ? I think it useless
		unital_ring: = ring,
		division_ring: = skew_field, ; I mat not use this name, as division_ring don't define the division indeed
		unital_module: = ring.module, ; left module ; * I'll do not define the singel module in this level
		vector_space: = field.module,
		finite_dimensional_vector_space: = field.module.finite_dimensional
		; ! linear_space: = field.module, ; it would cause confusing, as the (true) linear space should be a special affine space I think

		partial-ordered_set: = poset,
			partial_ordered_set: = poset,
		totally_ordered_set: = totally-ordered_set,
			linearly_ordered_set: = totally-ordered_set, ; may be confusing
		well_ordered_set: = well-ordered_set,
			least_well_ordered_set: = well-ordered_set,
			least_ordered_set: = well-ordered_set,
		supremum_ordered_set: = supremum-ordered_set,
			; ? complete-ordered_set: = supremum-ordered_set,
			; ? complete_ordered_set: = supremum-ordered_set,

		bounded_poset: = poset.bounded,
			bounded_above_poset: = poset.bounded_above,
			bounded_below_poset: = poset.bounded_below,
		
		top'space: = topological_space, ; My (year 2) topology teacher use it
		; ! simplicial_complex: = abstract_simplicial_complex, ; the latter maight be confusing

		; about compound structures
			; on rng
				associative_algebra(∀R: ∈ rng): = R.algebra, ; ?
			; end
		; end
	; end

	; ! about complex
		CW_complex: = cell_complex, ; refernce: Allen Hatcher - Algebraic Topology
		; about simplicial_complex
			simplicial_map: = abstract_simplicial_complex.homomorphism, ; ?
		; end
	; end

	; about topology
		continuous_function: = topological_space.continuous_function,
		bicontinuous_function: = topological_space.homeomorphism,
		; topological_isomorphism: = topological_space.isomorphism,
		identification_space: = toplogical_space.quotient,
	; end

	; about vector space (field.module)
		linear_transformation: = field.module.homomorphism,
		linear_map: = field.module.homomorphism, ; some one may use it
		linear_operator: = field.module.endomorphism. ; * I do not like this name

		; about real vector space
		ℝ-vector_space: = ℝ.vector_space,
		real_vector_space: = ℝ.vector_space,
		finite_dimensional_real_vector_space: = ℝ.vector_space.
	; end

	; ! about poset
		linear_continuum: = poset.continuum, ; as it is a linearly-ordered_set
	; end

	; about full name of inheritance
		; ? about trivial
			trivial_group: = group.trivial,
			trivial_rng: = rng.trivial,
			topological_trivial_space: = topological_space.trivial,
			trivial_vector_space: = field.module.trivial,
		; end
	; end

	; about sub structure
		subgroup: = group.sub,
		subrng: = rng.sub,
		subring: = ring.sub,
		subfield: = field.sub,
		vector_subspace: = field.module.sub,
			; linear_subspace: = field.module.sub,
		topological_subspace: = topological_space.sub,
		; about topological space
			connected_subspace: = topological_space.connected_sub,
			dense_subspace: = topological_space.dense_sub,
		; end
		; about group
			normal_subgroup: = group.normal_sub,
			commutator_subgroup: = group.commutator_sub,
			derived_subgroup: = group.commutator_sub,
		; end
	; end
; end
