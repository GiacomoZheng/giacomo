: ; ring, or unital_ring, or unital_rng
(
	"rng with multiplication identity"
	∈ structure.sub(rng), ; we need to renew the homomorphism about the R.1
	(
		∀R: ∈ ring,
		R.1: ∈ R,
		; ! ¬(R.1 = R.0), ; move to (integral) domain
		∀a: ∈ R,
		@R,
			1 × a = a = a × 1, ; multiply identity
		■
		; attributes
			R.multiplicative_set:
			(
				"closed under multiplication and contains 1"
				⊆ set.sub(R),
				∀S: ∈ R.multiplicative_set,
				@R,
					1 ∈ S,
					∀{x, y}: ⊆ S, x × y ∈ S
				■
			),
				R.multiplicative_subset: = R.multiplicative_set,
				R.multiplicatively_closed_set: = R.multiplicative_set,
				R.multiplicatively_closed_subset: = R.multiplicative_set,

	),
	[ hierarchy chain: ring ⊆ rng ⊆ abelian_group ]
	; location
		; about alias
			commutative_domain: = integral_domain,

			nonzero: = non_zero,

			regular_module: = module,
			l'module: = module,
			left_module: = l'module,
			; + r'module: = anti_module,
			; + right_module: = r'module,

			ker(∀f: ∈ homomorphism): = f.kernel,
		; end

		; + about inheritance
			sub(∀R: ∈ ring):
			(
				⊆ ring,
				⊆ rng.sub(R), ; the same "×"

				∀H: ∈ sub(R),
				H.1 = G.1
			),

			min_sub[∀G: ∈ ring](∀S: ⊆ G):
			(
				⊆ sub(G),
				∀H: ∈ min_sub[G](S),
				S ∈ set.sub(G)
			),

			ideal(∀R: ∈ ring): = rng.ideal(R),
			
			proper_ideal(∀R: ∈ ring): = rng.proper_ideal(R),

			maximal_ideal(∀R: ∈ ring): = rng.maximal_ideal(R),

			prime_ideal(∀R: ∈ ring): = rng.prime(R),

			nil(∀R: ∈ ring): = rng.nil(R),

			char(∀R: ∈ ring): = rng.char(R),
		; end
		
		; rep[∀R: ∈ ring]: =

		unit(∀R: ∈ ring): = {x|∃x': ∈ R, x' R.× x = R.1 = x R.× x'}[∀x: ∈ R],
		; it is a group over R.× of all the units in a ring

		inv[∀R: ∈ ring](∀x: ∈ unit(R)):
		(
			"valid because of the inverse is unique",
			∃x': ∈ R, x' R.× x = R.1 = x R.× x',
			= x'
		),

		; for special elements
			involution(∀R: ∈ ring):
			(
				⊆ set.element(R),
				∀x: ∈ involution(R),
				x R.× x = R.1
			),
		; end
),
