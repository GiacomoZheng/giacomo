: ; poset, or partial ordered set
(
	⊆ preordered_set, ; ?
	(
		[ not all the elements are comparable ]
		∀S: ∈ poset,
		S.relation ∈ order_relator,

		; attributions
			; about relator
				S.weekly_less_than: = S.relation,
				S.≤: = relator[S.weekly_less_than]
				
				S.weekly_great_than: = relation.inv(S.relation),
				S.≥: = relator[S.weekly_great_than], ; ∀{x, y}: ⊆ S, x S.≥ y ⇔ y S.≤ x

				S.strictly_less_than(∀x: ∈ S):
				(
					⊆ S.weekly_less_than(x),
					∀y: ∈ S.strictly_less_than(x),
					¬(y = x)
				),
				S.<: = relator[S.strictly_less_than],

				S.strictly_greater_than(∀x: ∈ S):
				(
					⊆ S.weekly_great_than(x),
					∀y: ∈ S.strictly_greater_than(x),
					¬(y = x)
				),
				S.>: = relator[S.strictly_greater_than] ; ∀{x, y}: ⊆ S, x S.> y ⇔ y S.< x
			; end

			; about extreme
				S.lowerest:
				(
					"smaller (or equal) than anyone else",
					⊆ set.element(S),
					∀x: ∈ S.lowerest,
					∀y: ∈ S, x S.≤ y
				),
				S.least: = S.lowerest,
				[ property: there is one or zero lowerest elements ]
				S.greatest:
				(
					"larger (or equal) than anyone else",
					⊆ set.element(S),
					∀x: ∈ S.greatest,
					∀y: ∈ S, x S.≥ y
				),
				[ property: there is one or zero greatest elements ]

				S.minimal:
				(
					"no smaller elements than it"
					⊆ set.element(S),
					∀x: ∈ S.minimal,
					¬∃y: ∈ S, y S.< x
				),
				S.maximal:
				(
					"no larger elements than it"
					⊆ set.element(S),
					∀x: ∈ S.maximal,
					¬∃y: ∈ S, y S.> x
				),

				S.lower_bound(∀A: ⊆ S):
				(
					⊆ set.element(S),
					∀x: ∈ S.lower_bound(A),
					∀a: ∈ A, a S.≤ x
				),
				S.bounded_below_subset:
				(
					⊆ set.sub(S),
					∀A: ∈ S.bounded_below_subset,
					∃x: ∈ S, x ∈ S.lower_bound(A) ; ? I may change it into nonempty class
				),
				
				S.upper_bound(∀A: ⊆ S):
				(
					⊆ set.element(S),
					∀x: ∈ S.upper_bound(A),
					∀a: ∈ A, a S.≥ x
				),
				S.bounded_above_subset:
				(
					⊆ set.sub(S),
					∀A: ∈ S.bounded_above_subset,
					∃x: ∈ S, x ∈ S.upper_bound(A) ; ? I may change it into nonempty class
				),

				S.bounded_subset:
				(
					; not confuse with bounded_set ; ?
					⊆ S.bounded_above_subset,
					⊆ S.bounded_below_subset
				),
				[ finite_set ⊆ bounded ]

				S.greatest_lower_bound(∀A: ∈ S.bounded_below_subset): = L[S](A).greatest
					S.infimum: = S.greatest_lower_bound,
					S.inf: = S.infimum,
				S.lowerest_upper_bound(∀A: ∈ S.bounded_above_subset): = U[S](A).lowerest,
					S.least_upper_bound: = S.lowerest_upper_bound,
					S.supremum: = S.lowerest_upper_bound,
					S.sup: = S.supremum,
			; end
	),

	; location
		; about alias
			maximal(∀S: ∈ poset): = S.maximal,
			minimal(∀S: ∈ poset): = S.minimal,

			L[∀S: ∈ poset](∀A: ∈ sub(S)):
			(
				∈ sub(S),
				L[S](A) set.= {∀x: ∈ S.lower_bound(A)}
			),
				lower_bound_space[∀S: ∈ poset]: = L[S],
			U[∀S: ∈ poset](∀A: ∈ sub(S)):
			(
				∈ sub(S),
				U[S](A) set.= {∀x: ∈ S.upper_bound(A)}
			),
				upper_bound_space[∀S: ∈ poset]: = U[S],

			infimum[∀S: ∈ poset]: = S.infimum,
				inf[∀S: ∈ poset]: = S.inf,
			supremum[∀S: ∈ poset]: = S.supremum,
				sup[∀S: ∈ poset]: = S.sup,
		; end

		chain(∀S: ∈ poset):
		(
			⊆ set.sub(S),
			⊆ total_ordered_set
		),
),