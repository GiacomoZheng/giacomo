: ; topological_space
(
	⊆ set,

	; ? I may choose my "→" version instead
	∀X: ∈ topological_space,
	X.τ: ⊆ Ps(X),
	∅ ∈ X.τ, X ∈ X.τ,
	∀{A, B}: ⊆ X.τ, A ∩ B ∈ X.τ,
	∀𝒞: ⊆ X.τ, ∩[](𝒞) ∈ X.τ, ; ?
	[ attibutes ]
	X.→:
	(
		∈ preorder_relator, ; reflective and transitive
		∀{a, b}: ⊆ X,
		a X.→ b ⇔ (∀S: ∈ X.τ, b ∈ S ⇒ a ∈ S)
	),

	[ for location ]
		; about alias
			topology(∀X: ∈ topological_space): = X.τ,

			homeomorphism: = isomorphism, ; I don't like it name
			bicontinuous_function: = isomorphism,
			close_set: = closed_set, ; someone others may use it
		; end

		; + generalize
			sub(∀S: ∈ set):
			(
				"subset",
				⊆ set,
				∀A: ∈ sub(S),
				A ⊆ S ; ?
			),
			
			closure[∀X: ∈ topological_space](∀A: ⊆ X): = {x|∃a: ∈ A, a X.→ x}[∀x: ∈ X], ; directly A ⊆ its closure
		; end

		Nbh[∀X: ∈ topological_space](∀x: ∈ X):
		(
			"neighborhood of x in X",
			⊆ set.sub(X),
			∀A: ∈ Nbh[X](x),
			∃O: ∈ X.τ,
			x ∈ O, O ⊆ A
		),

		open_set(∀X: ∈ topological_space): ; ? it is just the coresponding class of τ
		(
			⊆ set.sub(X),
		)

		closed_set(∀X: ∈ topological_space): ; ?
		(
			⊆ set.sub(X),
			∀F: ∈ closed_set(X),
			∀x: ∈ X, (∃y: ∈ F, y X.→ x) ⇒ x ∈ F
		),

		open_cover(∀C: ∈ topological_space):
		(
			⊆ cover(C),
			∀𝒞: ∈ open_cover(C),
			𝒞 ⊆ C.τ
		),

		dense_sub(∀X: ∈ topological_space):
		(
			⊆ set.sub(X),
			∀D: ∈ dense_sub(X),
			closure[X](D) = X
		),
		[ I may write dwon some equivalent version of it ]
),