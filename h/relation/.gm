: ; ? relation, or multivalued_function
(
	; ? maybe I'll change the output into variable
	"multivalued (or null) function (mapping indeed), in fact the output is still unique, but it is a variable (now it is a class)",
	; * really different with others
	⊆ function,
	(
		∀P: ∈ relation,
		P.D: ∈ set, P.C: ∈ set,
		∀x: ∈ P.D,
			P(x) ∈ sub(P.C) ; or 
			; P(x) ⊆ element(P.C)
	),
	; locations
		; + about alias
			
		; end

		; about operaions (nothing to do with operator)
			dual(∀R: ∈ relation)(∀x: ∈ R.C): ; +
			(
				"inverse indeed",
				⊆ sub(R.D),
				∀y: ∈ dual(R)(x),
				x ∈ R(y)
			),
			dual(∀R: ∈ relation).D: = R.C,
			dual(∀R: ∈ relation).C: = R.D,
		; end
),