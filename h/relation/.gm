: ; ? relation, or multivalued_function
(
	; ? maybe I'll change the output into variable
	"multivalued (or null) function (mapping indeed), in fact the output is still unique, but it is a variable (now it is a class)",
	; * really different with others
	⊆ function,
	(
		∀R: ∈ relation,
		R.D: ∈ set, R.C: ∈ set,
		∀x: ∈ R.D,
			; R(x) ∈ sub(R.C) ; or 
			R(x) ⊆ element(R.C),
		
		; attribute
			R.dual(∀x: ∈ R.C):
			(
				; + inv
				"inverse indeed",
				⊆ element(R.D),
				∀y: ∈ R.dual(x),
				x ∈ R(y)
			),
			R.dual.D: = R.C,
			R.dual.C: = R.D,
	),
	; locations
		; + about alias
			
		; end

		; about operations (nothing to do with operator)
			dual(∀R: ∈ relation): = R.dual,
		; end
),