; ; about locations
; 	s: = , ; standard,
; ; end

; about alias
	; about set
		; about morphism
			mapping: = set.homomorphism,
			injection: = set.monomorphism,
			surjection: = set.epimorphism,
			bijection: = set.isomorphism,

			permutation: = set.automorphism,
		; end
	; end

	; about function
		∘: = &function.∘&,
	; end

	; about relation
		reflexive_relation: = relation.reflexive,
		transitive_relation: = relation.transitive,
		symmetric_relation: = relation.symmetric,

		irreflexive_relation: = relation.irreflexive,
		antitransitive_relation: = relation.antitransitive,
		antisymmetric_relation: = relation.antisymmetric,

		preorder_relation: = relation.preorder,

		equivalent_relation: = relation.equivalent,
		order_relation: = relation.order,
	; end
; end

; about relator
	reflexive_relator: (⊆ relator, ∀𝓅: ∈ reflexive_relator, &𝓅&.r ∈ relation.reflexive),
	transitive_relator: (⊆ relator, ∀𝓅: ∈ transitive_relator, &𝓅&.r ∈ relation.transitive),
	symmetric_relator: (⊆ relator, ∀𝓅: ∈ symmetric_relator, &𝓅&.r ∈ relation.symmetric),

	irreflexive_relator: (⊆ relator, ∀𝓅: ∈ irreflexive_relator, &𝓅&.r ∈ relation.irreflexive),
	antitransitive_relator: (⊆ relator, ∀𝓅: ∈ antitransitive_relator, &𝓅&.r ∈ relation.antitransitive),
	antisymmetric_relator: (⊆ relator, ∀𝓅: ∈ antisymmetric_relator, &𝓅&.r ∈ relation.antisymmetric),

	preorder_relator: (⊆ relator, ∀𝓅: ∈ preorder_relator, &𝓅&.r ∈ relation.preorder),

	equivalent_relator: (⊆ relator, ∀𝓅: ∈ equivalent_relator, &𝓅&.r ∈ relation.equivalent),
	order_relator: (⊆ relator, ∀𝓅: ∈ order_relator, &𝓅&.r ∈ relation.order),
; end

∅: = {},

; ? the items below are waitting for adjustment

^: ; ? move to bijiecton
(
	∈ symbol,
	∀n: ∈ h.Z,

	∀f: ∈ bijection,
	i: = f.i, ; the identity permutation with the domain of f
	∃f': ∈ bijection, f' ∘ f = f ∘ f' = i,
	f ^ 0 = i,
	f ^ -1 = f',
	n > 0 ⇒ f ^ n = f ^ (n - 1) ∘ f,
	n < 0 ⇒ f ^ n = f ^ (n + 1) ∘ f ^ -1
),

{…}: ; +
(
	∈ bracket,
),

{…|…}: ; +
(
	∈ bracket,
),

; ? I don't how to deal with them now ; ! I may move them away later
; * but I suggest you to write h.* than just use NZQR
N: = {}, ; 0, 1, 2, …
Z: = {},
Q: = {},
R: = {},
