 :=&&,
: = &&,
	: = &&,
; define " ","\n", "\t" as pure delimiters

=: , ; equal, point to the same location
⇒: , ; if … then
[ 
	the definition of these
	' symbols '
	@		--- locator
	■		--- terminator
	 		---	delimiter
	( )		---	bracket
	∀ ∃ !	---	quantifier
	.		---	operator
	⇒		---	relator
	:		---	definer
	,		---	separator ⊆ operator
	' others '
	" "
	◉
 ]

[ 
	priority:
	none bracket function
	quantifier relator
	operator
	definer
	separator  
 ]
[ 
	;■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	?■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	*■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	!■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
	+■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
 ]

[ ```
	⇒:
	(
		∈ relator, ; a sample of symbol
		∀A: ∈ statement,
		∀B: ∈ statement,
		B ⇒ (A ⇒ B),
		(∀C: ∈ statement, A ⇒ (B ⇒ C)) ⇒ ((A ⇒ B) ⇒ (A ⇒ C)),
	)
	A ⇒ (B ⇒ A),
	(!(A) ⇒ !(B)) ⇒ (B ⇒ A),

	!(A) ⇒ (A ⇒ B),
``` ]